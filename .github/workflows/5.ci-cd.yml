name: Docker Image CI/CD Test
# This is a test comment to trigger CI

on:
    push:
        branches: ["main"]
        paths:
            - "5.set_up_cd/**"

jobs:
    build-and-push:
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: ./5.set_up_cd

        steps:
            - name: Checkout source code
              uses: actions/checkout@v4

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18"
                  cache: "npm"
                  cache-dependency-path: 5.set_up_cd/package-lock.json
            - name: Install dependencies
              run: npm install

            - name: .env Setting
              run: |
                  echo "POSTGRES_USER=${{secrets.POSTGRES_USER}}" >> .env
                  echo "POSTGRES_PASSWORD=${{secrets.POSTGRES_PASSWORD}}" >> .env
                  echo "POSTGRES_DB=${{secrets.POSTGRES_DB}}" >> .env

            - name: create Volume
              run: docker volume create docker_practice

            - name: Docker compose build
              run: docker compose up -d

            - name: Wait for services
              run: sleep 15

            - name: Run Unit & Integration Test
              run: npm test

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Stop services
              if: always()
              run: docker compose down

            - name: Build and push Docker Image
              uses: docker/build-push-action@v5
              with:
                  context: ./5.set_up_cd
                  file: ./5.set_up_cd/dockerfile
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-repo:latest
    deploy:
        needs: build-and-push
        runs-on: ubuntu-latest

        steps:
            - name: Deploy to production server
              uses: appleboy/ssh-action@master
              with:
                  host: ${{secrets.HOST}}
                  username: ${{secrets.USERNAME}}
                  key: ${{secrets.SSH_PRIVATE_KEY}}
                  script: |
                      cd ~/my-blog-api/docker_practice/5.set_up_cd

                      echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" > .env
                      echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
                      echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env

                      git pull origin main

                      sudo docker-compose pull

                      sudo docker-compose up -d
