name: Docker Image CI/CD Test

on:
    push:
        branches: ["main"]
        paths:
            - "4./**"

jobs:
    build-and-push:
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: ./4.

        services:
            postgres:
                image: postgres:15-alpine

                env:
                    POSTGRES_USER: myuser
                    POSTGRES_PASSWORD: mypassword
                    POSTGRES_DB: mydb
                    options: >-
                        --health-cmd pg_isready
                        --health-interval 10s
                        --health-timeout 5s
                        --health-retries 5
        steps:
            - name: Checkout source code
              uses: actions/checkout@v4

            - name: Set Up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18"

            - name: Install dependencies
              run: npm install

            - name: Run Unit & Integration Test
              env:
                  POSTGRES_USER: myuser
                  POSTGRES_PASSWORD: mypassword
                  POSTGRES_DB: mydb
                  NODE_ENV: test
                  PGHOST: postgres
              run: npm test

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build and push Docker Image
              uses: docker/build-push-action@v5
              with:
                  context: ./4.
                  file: ./4./dockerfile
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-repo:latest
